# Trial Name: final8_combined.yaml
# ARIAC2023
# 2023-06-20 10:15:44

# ENVIRONMENT SETUP
time_limit: 400 # options: -1 (no time limit) or number of seconds
gazebo_state_logging: true

kitting_trays: # Which kitting trays will be spawned
  tray_ids: [0,0]
  slots: [1,2]

parts:
  # conveyor_belt: #population params for conveyor belt
  #   active: true
  #   spawn_rate: 15 # seconds between spawn
  #   order: 'random' # random or sequential
  #   parts_to_spawn:
  #     - type: 'pump'
  #       color: 'green'
  #       number: 2
  #       offset: 0.15 # between -1 and 1
  #     - type: 'battery'
  #       color: 'green'
  #       number: 2
  #       offset: -0.15 # between -1 and 1
  #     - type: 'sensor'
  #       color: 'green'
  #       number: 2
  #       offset: 0.0 # between -1 and 1
  #     - type: 'regulator'
  #       color: 'green'
  #       number: 2
  #       offset: 0.30 # between -1 and 1
  bins: # bin params - 8 total bins each bin has nine total slots (1-9)
    bin1:
      - type: 'pump'
        color: 'orange'
        slots: [4]
      - type: 'pump'
        color: 'green'
        slots: [6]
    bin2:
      - type: 'battery'
        color: 'orange'
        slots: [2,4]
      - type: 'battery'
        color: 'green'
        slots: [5,7]
    bin6:
      - type: 'sensor'
        color: 'orange'
        slots: [4]
      - type: 'sensor'
        color: 'green'
        slots: [6]
    bin5:
      - type: 'regulator'
        color: 'orange'
        slots: [4]
      - type: 'regulator'
        color: 'green'
        slots: [6]


# ORDER SETUP
orders:
  - id: 'FINAL8COMBINED1'
    type: 'combined'
    announcement:
      time_condition: 0.0
    priority: false
    combined_task:
      station: 'as1'
      products:
        - type: 'pump'
          color: 'green'
          assembled_pose: # relative to briefcase frame
            xyz: [0.14, 0.0, 0.02]
            rpy: [0, 0, '-pi/2']
          assembly_direction: [0.0, 0.0, 0.0]
        - type: 'battery'
          color: 'green'
          assembled_pose: # relative to briefcase frame
            xyz: [-0.15, 0.035, 0.043]
            rpy: [0, 0, 'pi/2']
          assembly_direction: [0.0, 0.0, 0.0]
        - type: 'sensor'
          color: 'green'
          assembled_pose: # relative to briefcase frame
            xyz: [-0.1, 0.395, 0.045]
            rpy: [0, 0, '-pi/2']
          assembly_direction: [0.0, 0.0, 0.0]
        - type: 'regulator'
          color: 'green'
          assembled_pose: # relative to briefcase frame
            xyz: [0.175, -0.223, 0.215]
            rpy: ['pi/2', 0, '-pi/2']
          assembly_direction: [0.0, 0.0, 0.0]
  - id: 'FINAL8COMBINED2'
    type: 'combined'
    announcement:
      time_condition: 30.0
    priority: true
    combined_task:
      station: 'as3'
      products:
        - type: 'pump'
          color: 'orange'
          assembled_pose: # relative to briefcase frame
            xyz: [0.14, 0.0, 0.02]
            rpy: [0, 0, '-pi/2']
          assembly_direction: [0.0, 0.0, 0.0]
        - type: 'battery'
          color: 'orange'
          assembled_pose: # relative to briefcase frame
            xyz: [-0.15, 0.035, 0.043]
            rpy: [0, 0, 'pi/2']
          assembly_direction: [0.0, 0.0, 0.0]
        - type: 'sensor'
          color: 'orange'
          assembled_pose: # relative to briefcase frame
            xyz: [-0.1, 0.395, 0.045]
            rpy: [0, 0, '-pi/2']
          assembly_direction: [0.0, 0.0, 0.0]
        - type: 'regulator'
          color: 'orange'
          assembled_pose: # relative to briefcase frame
            xyz: [0.175, -0.223, 0.215]
            rpy: ['pi/2', 0, '-pi/2']
          assembly_direction: [0.0, 0.0, 0.0]

# GLOBAL CHALLENGES
challenges:
  - robot_malfunction:
      duration: 10.0
      robots_to_disable: ['ceiling_robot']
      time_condition: 0.0
  - sensor_blackout:
      duration: 30.0
      sensors_to_disable: ['camera', 'logical_camera']
      time_condition: 30.0
  # - dropped_part:
  #     robot: 'floor_robot'
  #     type: 'battery'
  #     color: 'green'
  #     drop_after: 0 # drops the 1st green battery picked up by floor robot
  #     delay: 1 # drops after 1s
  # - dropped_part:
  #     robot: 'ceiling_robot'
  #     type: 'battery'
  #     color: 'green'
  #     drop_after: 0 # drops the 1st green battery picked up by ceiling robot
  #     delay: 1 # drops after 1s
  # - dropped_part:
  #     robot: 'ceiling_robot'
  #     type: 'battery'
  #     color: 'orange'
  #     drop_after: 0 # drops the 1st orange battery picked up by ceiling robot
  #     delay: 1 # drops after 1s
  # - dropped_part:
  #     robot: 'floor_robot'
  #     type: 'battery'
  #     color: 'orange'
  #     drop_after: 0 # drops the 1st orange battery picked up by floor robot
  #     delay: 1 # drops after 1s